plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'

//  spring
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.projectlombok:lombok:1.18.28'
    implementation 'org.testng:testng:7.7.0'
    implementation 'org.jetbrains:annotations:24.0.0'
    testImplementation 'junit:junit:4.13.1'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-devtools'

    //Webflux
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

//	runtimeOnly 'com.h2database:h2'
    implementation 'mysql:mysql-connector-java:8.0.28'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter'
    runtimeOnly 'com.mysql:mysql-connector-j'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

//  swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

//  jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'


//  json parsing
    implementation 'com.google.code.gson:gson:2.9.0'

//  mapstruct
    annotationProcessor("org.mapstruct:mapstruct-processor:1.5.3.Final")
    testAnnotationProcessor("org.mapstruct:mapstruct-processor:1.5.3.Final")
    implementation("org.mapstruct:mapstruct:1.5.3.Final")
    implementation("org.projectlombok:lombok-mapstruct-binding:0.2.0")

//  security
    testImplementation 'org.springframework.security:spring-security-test'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    implementation group: 'org.javassist', name: 'javassist', version: '3.15.0-GA'

    // AWS SDK for Java 1.x
    implementation platform('com.amazonaws:aws-java-sdk-bom:1.12.529')
    implementation 'com.amazonaws:aws-java-sdk-s3'

    // web-socket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation("org.springframework.boot:spring-boot-starter-thymeleaf")

    // security
    implementation("org.springframework.boot:spring-boot-starter-security")

    // TestDB
    testImplementation group: 'com.h2database', name: 'h2', version: '2.1.214'

    // Aws Opensearch
    implementation("org.opensearch.client:opensearch-rest-client:2.11.0")
    implementation("org.opensearch.client:opensearch-java:2.7.0")
    implementation("jakarta.json:jakarta.json-api")

    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

    // log4j2
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // prometheus & grafana
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    // 	discord
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '3.1.1'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    // oauth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // netty-resolver
    implementation 'io.netty:netty-resolver-dns-native-macos:4.1.68.Final:osx-aarch_64'
}

tasks.named('test') {
    useJUnitPlatform()
}

configurations {
    all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    all*.exclude group: 'org.springframework.boot', module: 'logback-classic'
}

jar {
    enabled = false
}